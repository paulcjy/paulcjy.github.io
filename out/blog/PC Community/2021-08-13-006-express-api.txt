1:HL["/_next/static/css/91417e851664d5e6.css","style",{"crossOrigin":""}]
0:["do94uUDEZXsSVKajn7tGk",[[["",{"children":["blog",{"children":[["board","PC%20Community","d"],{"children":[["post","2021-08-13-006-express-api","d"],{"children":["__PAGE__?{\"board\":\"PC Community\",\"post\":\"2021-08-13-006-express-api\"}",{}]}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/91417e851664d5e6.css","precedence":"next","crossOrigin":""}]],"$L3"]]]]
4:I[2649,["326","static/chunks/326-9823f391d24e26fc.js","185","static/chunks/app/layout-3fc148124fdeb158.js"],"CustomThemeProvider"]
5:I[8326,["326","static/chunks/326-9823f391d24e26fc.js","431","static/chunks/app/blog/%5Bboard%5D/page-86149bc53665de2b.js"],""]
6:I[5235,["326","static/chunks/326-9823f391d24e26fc.js","185","static/chunks/app/layout-3fc148124fdeb158.js"],""]
7:I[6954,[],""]
8:I[7264,[],""]
9:["board","PC%20Community","d"]
b:T17e7,<h1>1. 나이스 API</h1>
<p>서비스에 여러 기능을 넣을거지만 먼저 나이스 API를 통해 학교에 관한 정보를 받아올 것이다.
<a href="https://open.neis.go.kr/portal/mainPage.do">나이스 교육정보 개방 포털</a>에 가면 교육과 관련된 12가지 정보를 받아올 수 있다.
내가 원하는 정보는 학사일정, 시간표, 식단표이다.
포털을 찾아보니 학사일정, 고등학교시간표, 급식식단정보라는 데이터를 제공하고 있다.
내 모교의 정보를 가져오려고 한다.</p>
<p>API를 이용하기 위해서는 인증키를 발급받아야 한다.
로그인을 하고 활용가이드-인증키신청에 들어가니 활용용도를 간단하게 적고 발급받을 수 있었다.</p>
<p>인증키가 생겼으면 API를 가져오는 법을 알아야 한다.</p>
<h2>1) 학사일정</h2>
<p>데이터셋-학사일정에 가면 API에 대한 정보를 확인할 수 있다.
Open API 탭에 자세한 정보가 나온다.</p>
<p>학사일정의 주소는 <code>https://open.neis.go.kr/hub/SchoolSchedule</code>이다.
이 주소 뒤에 인자를 query string으로 넣어주면 된다.</p>
<ul>
<li>KEY</li>
<li>Type</li>
<li>pIndex</li>
<li>pSize</li>
<li>ATPT_OFCDC_SC_CODE</li>
<li>SD_SCHUL_CODE</li>
</ul>
<p>KEY는 발급받은 인증키이다.<br>
Type은 받으려는 문서의 종류이다. xml과 json을 선택할 수 있다.<br>
pIndex는 페이지 번호이다.<br>
pSize는 페이지 당 데이터 개수이다.<br>
ATPT_OFCDC_SC_CODE는 시도교육청코드이다.<br>
SD_SCHUL_CODE는 표준학교코드이다.</p>
<h2>2) 급식식단정보</h2>
<p>식단표도 학사일정과 거의 똑같다.
필수 인자는 동일하게 넣어주면 된다.
선택 인자로는 <code>MLSV_YMD</code>를 선택했다.
학사일정과 마찬가지로 날짜로 검색할 수 있게 해준다.</p>
<h2>3) 고등학교시간표</h2>
<p>시간표는 정보 형식이 내가 예상했던 것과는 많이 달랐다.
나는 학기별로 시간표가 고정되어 요일별로 과목이 쭉 나오는 형태를 기대했는데, 실제로는 날짜별로 하루 하루 과목이 적혀 있었다.
심지어 한 교시마다 객체 한 개로 되어있어서 이걸 어떻게 처리해야 하나 고민을 많이 했다.
선택 인자로는 학년도, 학기, 학년, 반을 넣었는데, 워낙 정보가 많고 매주 중복되다보니 날짜도 사용해야 할 것 같다.</p>
<h1>2. axios로 요청하기</h1>
<p>처음에 Express에서 React로 정보를 가져올 때는 코드도 간단하고 이해하기 쉬웠지만 이번에는 쿼리 스트링의 인자가 너무 많아서 다시 사용법을 알아보았다.
<a href="https://axios-http.com/docs/example">axios 공식 문서</a><a href="https://github.com/axios/axios">(axios Github)</a>에 잘 설명되어 있다.
간단하게 <code>GET</code>과 <code>POST</code> 요청을 보내는 방법이다.</p>
<h2>1) GET</h2>
<p>ID값을 12345로 보내는 요청이다.</p>
<pre><code class="language-js">axios
  .get('/user?ID=12345')
  .then(function (response) {
    // handle success
    console.log(response);
  })
  .catch(function (error) {
    // handle error
    console.log(error);
  })
  .then(function () {
    // always executed
  });
</code></pre>
<pre><code class="language-js">axios
  .get('/user', {
    params: {
      ID: 12345,
    },
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  })
  .then(function () {
    // always executed
  });
</code></pre>
<pre><code class="language-js">async function getUser() {
  try {
    const response = await axios.get('/user?ID=12345');
    console.log(response);
  } catch (error) {
    console.error(error);
  }
}
</code></pre>
<h2>2) POST</h2>
<p>POST로 보내는 요청이다. 성과 이름을 보내고 있다.</p>
<pre><code class="language-js">axios
  .post('/user', {
    firstName: 'Fred',
    lastName: 'Flintstone',
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
</code></pre>
<pre><code class="language-js">function getUserAccount() {
  return axios.get('/user/12345');
}

function getUserPermissions() {
  return axios.get('/user/12345/permissions');
}

Promise.all([getUserAccount(), getUserPermissions()]).then(function (results) {
  const acct = results[0];
  const perm = results[1];
});
</code></pre>
<blockquote>
<p>사실 기본적인 방법 외에는 무슨 용도로 사용하고 어떻게 작동하는지 자세히 알아보지 않았다.
나중에 필요하면 더 공부해야겠다.<br>
인자를 넣을 때는 객체 형태로 넣는 방법이 가장 편했다.</p>
</blockquote>
<h1>3. Express에서 사용하기</h1>
<p>아직은 기능을 구현한 게 전혀 없어서 나이스 API에서 json을 받아 거의 그대로 돌려주는 것 밖에 만들지 못했다.
예시로 식단표를 받아 json으로 돌려주는 Express의 <code>/menu</code> 라우터이다. 2021년 3월로 검색했다.</p>
<p><code>./server/routes/menu.js</code></p>
<pre><code class="language-js">import express from 'express';
import axios from 'axios';

const router = express.Router();

router.get('/', (req, res, next) => {
  axios
    .get('https://open.neis.go.kr/hub/mealServiceDietInfo', {
      params: {
        KEY: '********************************',
        Type: 'json',
        pIndex: 1,
        pSize: 10,
        ATPT_OFCDC_SC_CODE: 'B10',
        SD_SCHUL_CODE: '7010170',
        MLSV_YMD: '202103', // 날짜로 검색
        // MLSV_FROM_YMD: , // 시작 일자
        // MLSV_TO_YMD: , // 종료 일자
      },
    })
    .then((response) => {
      res.json(response.data.mealServiceDietInfo[1].row);
    })
    .catch((err) => {
      console.log(err);
    });
});

export default router;
</code></pre>
<p><img src="https://user-images.githubusercontent.com/86853786/129287781-e408939a-3eb0-48b9-a00f-bc068c401907.png" alt="결과"></p>2:[null,["$","html",null,{"children":["$","body",null,{"children":["$","$L4",null,{"children":[["$","header",null,{"className":"h-16 sticky top-0 flex justify-center shadow bg-white/70 items-center backdrop-blur-sm dark:bg-black/80 dark:shadow-neutral-800","children":["$","nav",null,{"className":"flex ","children":[["$","div",null,{"className":"flex font-bold","children":[["$","$L5","Blog",{"href":"/blog","className":"transition flex justify-center w-16 text-gray-900 hover:text-gray-300 dark:text-gray-100 dark:hover:text-gray-600","children":"Blog"}],["$","$L5","About",{"href":"/about","className":"transition flex justify-center w-16 text-gray-900 hover:text-gray-300 dark:text-gray-100 dark:hover:text-gray-600","children":"About"}]]}],["$","div",null,{"className":"flex","children":["$","$L6",null,{}]}]]}]}],["$","main",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col h-[90vh] items-center justify-center","children":["$","div",null,{"className":"flex items-center","children":[["$","h1",null,{"className":"inline-block text-2xl pr-8 mr-8 border-r-[1.5px] border-gray-400 py-2","children":"404"}],["$","h2",null,{"className":"inline-block text-lg","children":"This page could not be found"}]]}]}],"notFoundStyles":[],"childProp":{"current":[null,["$","div",null,{"className":"my-10 grid grid-cols-[1fr,minmax(auto,1100px),1fr]","children":["$","div",null,{"className":"col-start-2 grid grid-cols-[minmax(auto,200px),min(700px,100%)] gap-x-10","children":[["$","div",null,{"children":["$","div",null,{"className":"space-y-5","children":[["$","div","Linux",{"children":[["$","div",null,{"className":"mb-1 px-3 font-semibold tracking-wider text-zinc-400","children":"Linux"}],[["$","$L5","basic",{"href":"/blog/basic","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"basic"}],["$","span",null,{"className":"text-gray-400","children":["(",7,")"]}]]}]]]}],["$","div","Web",{"children":[["$","div",null,{"className":"mb-1 px-3 font-semibold tracking-wider text-zinc-400","children":"Web"}],[["$","$L5","GitHub Pages + Next",{"href":"/blog/GitHub Pages + Next","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"GitHub Pages + Next"}],["$","span",null,{"className":"text-gray-400","children":["(",1,")"]}]]}],["$","$L5","Github pages",{"href":"/blog/Github pages","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"Github pages"}],["$","span",null,{"className":"text-gray-400","children":["(",15,")"]}]]}],["$","$L5","PC Community",{"href":"/blog/PC Community","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"PC Community"}],["$","span",null,{"className":"text-gray-400","children":["(",8,")"]}]]}],["$","$L5","온라인 명륜당",{"href":"/blog/온라인 명륜당","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"온라인 명륜당"}],["$","span",null,{"className":"text-gray-400","children":["(",0,")"]}]]}]]]}]]}]}],["$","div",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["board","PC%20Community","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$9","children",["post","2021-08-13-006-express-api","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$La",["$","article",null,{"className":"mx-auto","children":[["$","div",null,{"className":"mb-12 text-center","children":[["$","h1",null,{"className":"text-3xl font-bold","children":"학생 커뮤니티 사이트 제작 (6) - Express로 외부 API 받아오기"}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-1 text-xs text-gray-600 dark:text-gray-400","children":"2021. 08. 11."}]]}],["$","div",null,{"className":"[&>*]:mb-3 [&>*:last-child]:mb-0 markdown-body","dangerouslySetInnerHTML":{"__html":"$b"}}]]}],null],"segment":"__PAGE__?{\"board\":\"PC Community\",\"post\":\"2021-08-13-006-express-api\"}"},"styles":null}],"segment":["post","2021-08-13-006-express-api","d"]},"styles":null}],"segment":["board","PC%20Community","d"]},"styles":null}]}]]}]}],null],"segment":"blog"},"styles":null}]}]]}]}]}],null]
3:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"학생 커뮤니티 사이트 제작 (6) - Express로 외부 API 받아오기 | 개발 일지"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
a:null
