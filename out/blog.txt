1:HL["/_next/static/css/91417e851664d5e6.css","style",{"crossOrigin":""}]
0:["I-pGflQKisqRv9OcXwST-",[[["",{"children":["blog",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/91417e851664d5e6.css","precedence":"next","crossOrigin":""}]],"$L3"]]]]
4:I[2649,["326","static/chunks/326-9823f391d24e26fc.js","185","static/chunks/app/layout-3fc148124fdeb158.js"],"CustomThemeProvider"]
5:I[8326,["326","static/chunks/326-9823f391d24e26fc.js","768","static/chunks/app/blog/layout-c5a88dac1aad5566.js"],""]
6:I[5235,["326","static/chunks/326-9823f391d24e26fc.js","185","static/chunks/app/layout-3fc148124fdeb158.js"],""]
7:I[6954,[],""]
8:I[7264,[],""]
2:[null,["$","html",null,{"children":["$","body",null,{"children":["$","$L4",null,{"children":[["$","header",null,{"className":"h-16 sticky top-0 flex justify-center shadow bg-white/70 items-center backdrop-blur-sm dark:bg-black/80 dark:shadow-neutral-800","children":["$","nav",null,{"className":"flex ","children":[["$","div",null,{"className":"flex font-bold","children":[["$","$L5","Blog",{"href":"/blog","className":"transition flex justify-center w-16 text-gray-900 hover:text-gray-300 dark:text-gray-100 dark:hover:text-gray-600","children":"Blog"}],["$","$L5","About",{"href":"/about","className":"transition flex justify-center w-16 text-gray-900 hover:text-gray-300 dark:text-gray-100 dark:hover:text-gray-600","children":"About"}]]}],["$","div",null,{"className":"flex","children":["$","$L6",null,{}]}]]}]}],["$","main",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col h-[90vh] items-center justify-center","children":["$","div",null,{"className":"flex items-center","children":[["$","h1",null,{"className":"inline-block text-2xl pr-8 mr-8 border-r-[1.5px] border-gray-400 py-2","children":"404"}],["$","h2",null,{"className":"inline-block text-lg","children":"This page could not be found"}]]}]}],"notFoundStyles":[],"childProp":{"current":[null,["$","div",null,{"className":"my-10 grid grid-cols-[1fr,minmax(auto,1100px),1fr]","children":["$","div",null,{"className":"col-start-2 grid grid-cols-[minmax(auto,200px),min(700px,100%)] gap-x-10","children":[["$","div",null,{"children":["$","div",null,{"className":"space-y-5","children":[["$","div","Linux",{"children":[["$","div",null,{"className":"mb-1 px-3 font-semibold tracking-wider text-zinc-400","children":"Linux"}],[["$","$L5","basic",{"href":"/blog/basic","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"basic"}],["$","span",null,{"className":"text-gray-400","children":["(",7,")"]}]]}]]]}],["$","div","Web",{"children":[["$","div",null,{"className":"mb-1 px-3 font-semibold tracking-wider text-zinc-400","children":"Web"}],[["$","$L5","GitHub Pages + Next",{"href":"/blog/GitHub Pages + Next","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"GitHub Pages + Next"}],["$","span",null,{"className":"text-gray-400","children":["(",1,")"]}]]}],["$","$L5","Github pages",{"href":"/blog/Github pages","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"Github pages"}],["$","span",null,{"className":"text-gray-400","children":["(",15,")"]}]]}],["$","$L5","PC Community",{"href":"/blog/PC Community","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"PC Community"}],["$","span",null,{"className":"text-gray-400","children":["(",8,")"]}]]}],["$","$L5","온라인 명륜당",{"href":"/blog/온라인 명륜당","className":"block rounded-md m-0 px-3 py-1 text-sm font-medium hover:bg-gray-100 hover:text-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-100","children":[["$","span",null,{"className":"pr-1.5","children":"온라인 명륜당"}],["$","span",null,{"className":"text-gray-400","children":["(",0,")"]}]]}]]]}]]}]}],["$","div",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L9",["$","div",null,{"className":"mx-auto","children":[["$","h1",null,{"className":"mb-10 text-center text-3xl font-black text-zinc-700 dark:text-zinc-200","children":"Latest"}],[["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/GitHub Pages + Next/getting-started","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"프로젝트 시작하기"}]}],["$","time",null,{"dateTime":"2023-11-01T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2023. 11. 01."}],["$","div",null,{"className":"text-sm leading-loose","children":"프로젝트 시작하기"}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/basic/2021-08-25-01-windows-terminal","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"[Linux] Windows Terminal 설치 및 설정"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"리눅스 공부를 시작한다. 윈도우의 WSL2를 이용하여 리눅스를 사용할 것이다. 그러기 위해서는 Windows Terminal을 설치해야 한다.\n\n1. Windows Terminal\n\nWindows Terminal이란?\n\nWindows Terminal은 CLI(Command-line Interface)를 위한 터미널 프로그램이다. 기존 윈도우는 cmd나 PowerShell을 사용했는데, 불편한 ..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/basic/2021-08-25-02-wsl2","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"[Linux] WSL2 설치하고 Windows Terminal에서 설정하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"1. WSL2 설치\n\nWSL2 설치 가이드\n\n1) Windows 버전 확인\nWSL2 실행을 위해서는 특정 버전 이상이어야 한다.\n\nx64: 버전 1903 이상, 빌드 18362 이상\nARM64: 버전 2004 이상, 빌드 19041 이상\n\n자신의 버전 및 빌드를 확인하려면 Win + r을 눌러 winver를 입력한다. 요구 사항이 충족되지 않는다면 윈도우 업데이트를 해야 한다.\n2) Windo..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/basic/2021-08-26-03-shell-prompt","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"[Linux] 쉘 프롬프트 Shell Prompt 모양 변경"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"내 쉘에서는 프롬프트에 DESKTOP-OKKS8A2라는 보기 싫은 이름이 붙어있다.\n\n이걸 없애려고 찾아봤는데, 이 부분 전체를 원하는 대로 설정할 수 있었다. 구글링하려면 bash, bashrc, ps1, shell prompt 등으로 검색하면 된다.\n\n1. 설정 위치\n설정이 있는 곳은 두 군데이다.\n\n/etc/bash.bashrc\n~/.bashrc\n\n/etc/bash.bashrc는 전역 설..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/basic/2021-08-27-04-systemd-error","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"[Linux] System has not been booted with systemd as init system (PID 1). 해결법"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"WSL2에서 hostnamectl 명령을 통해 hostname을 변경하려고 했는데, 계속 에러가 떴다. Ubuntu에서 hostname 변경은 hostnamectl라고 하고, 정작 내 컴퓨터에서는 에러가 나고, 제대로 설명한 곳도 찾기 힘들었다. 또 이 에러에 대해 검색해보면 다른 경우만 나오고 도움되는 내용은 없었다. 보통 systemctl을 실행하거나 docker를 사용할 때 많이 발생하는..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/basic/2021-08-27-05-zsh","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"[Linux] zsh 설치"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"리눅스에서는 터미널을 많이 사용한다. 이 때 명령을 해석하고 실행시키는 것이 shell이다. 우분투에서는 기본 쉘로 bash를 사용한다.\nzsh는 bash보다 기능도 많고 플러그인이나 테마를 이용해 커스터마이징이 가능해서 기본 쉘보다 더 예쁘고 편리하게 터미널을 사용할 수 있도록 해준다. 이를 위해서는 oh-my-zsh도 같이 설치해야 한다.\n\noh-my-zsh 설치\n\n\n1. zsh 설치\n현재..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/basic/2021-08-27-06-oh-my-zsh","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"[Linux] oh-my-zsh 설치"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":""}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/basic/2022-06-23-00-zsh","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (4) - Markdown 마크다운 문법"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"shell 확인\necho $SHELL\nzsh 설치\nsudo apt install zsh\nzsh 경로 확인\nwhich zsh\nshell 변경\nchsh -s /usr/bin/zsh\n재실행\n옵션이 나오면 2번 실행\n\nbrew 설치\nhttps://brew.sh/\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/1","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (1) - 시작하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"1. Github에서 Repository 생성하기\nGithub 블로그는 repository를 이용해서 관리한다. 주의할 점은, repository 이름이 username.github.io일 때에만 블로그로 사용이 가능하다. username에는 본인의 계정 이름을 넣으면 된다. 그러고 여기에 내용물이 되는 파일들을 업로드한다.\nNew를 클릭하여 새 repository 생성\n\nrepository ..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/10","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (10) - Liquid 문법"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"Jekyll은 페이지의 HTML을 만들 때 Liquid라는 언어를 사용한다. Liquid를 알면 minimal-mistakes에서 기본적으로 제공하는 레이아웃을 내가 원하는 대로 수정할 수 있다. 다음에는 사이드 바에 네비게이션을 만들건데, Liquid를 알아야만 해서 Liquid를 먼저 소개한다.\n자세한 내용은 아래 사이트 참고.\n\nLiquid\n\n\n1. 시작\nLiquid는 객체(objects..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/11","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (11) - Jekyll 변수 사용하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":""}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/12","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (12) - 카테고리마다 별도의 페이지 만들기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"구글 검색\r\n댓글 기능"}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/13","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (13) - 네비게이션 목록 만들기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":""}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/14","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (14) - 구글에서 Jekyll 블로그 검색되게 설정하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"구글 Analytics"}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/15","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (15) - 포스트에 댓글 기능 추가하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"페이지 너비 키우기\r\n_variables에 breakpoint에서 담당\n사이드바 너비 조정\r\n_sidebar에 .sidebar와 .sidebar-right"}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/2","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (2) - Jekyll 테마 적용하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"1. Jekyll이란?\n\nJekyll 사이트\n\nJekyll은 정적 웹사이트 생성기이다. HTML이나 Markdown 등의 언어로 글을 작성하면 테마를 적용하여 웹 페이지를 만들어준다. 테마도 이미 만들어진 것 중에 선택할 수 있고, 내가 원하는 대로 다양한 설정을 만질 수 있다.\n\n어떤 글에서는 Jekyll이 Ruby로 만들어진 것이라 Ruby를 설치해야 한다고 했는데, 지금까지 블로그를 만들..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/3","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (3) - 첫 글 쓰기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"이번에는 간단하게 글을 작성해보겠다.\r\n포스트를 띄울 때 필요한 것은 Markdown 문법으로 작성한 본문과 Front Matter이다.\r\n본문은 말 그대로 포스트에 나오는 내용이다.\r\nFront Matter는 글에 대한 정보를 저장하는 부분이다.\r\n메타데이터라고 생각하면 된다.\n\n1. Front Matter 작성하기\nFront Matter는 파일 시작 부분에 작성하는 YAML 구역이다. 여기..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/4","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (4) - Markdown 마크다운 문법"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"\nMarkdown Guide\n\n\n1. 제목 Headings\n제목은 1단계부터 6단계까지 있다. 각각 HTML의 &#x3C;h1>~&#x3C;h6>에 해당한다. 제목을 표시하기 위해서는 #을 앞에 붙이면 된다.\n# 제목1\r\n## 제목2\r\n### 제목3\r\n#### 제목4\r\n##### 제목5\r\n###### 제목6\n\n\n제목1\n제목2\n제목3\n제목4\n제목5\n제목6\n\n제목1과 제목2는 다른 방법으로도 표시..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/5","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (5) - 본문 너비 조정하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"처음 만든 페이지는 글씨가 너무 크고, 본문의 너비가 좁아서 답답한 느낌이 들었다.\n\n\nCSS를 수정하여 본문의 너비를 조정할 수 있다.\n\n해당 설정은 /_sass/minimal-mistakes/_variables.scss에 들어있다. 이 파일은 CSS 설정값들을 변수로 만들어 모아놓은 파일이다. 여기서 글꼴, 헤더 폰트 사이즈, 색깔, 사이드바 너비, 반응형 페이지 기준 설정 등 다양한 변수..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/6","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (6) - 폰트 크기 조정하기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"본문 너비를 늘였지만 아직 글씨 크기가 너무 크다. 글씨 크기에 관한 설정은 /_sass/minimal-mistakes/_reset.scss에 들어있다.\nhtml {\r\n  /* apply a natural box layout model to all elements */\r\n  box-sizing: border-box;\r\n  background-color: $background-color;\r\n  ..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/7","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (7) - 로컬에서 Jekyll 페이지 미리보기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"그동안 VS Code로 블로그 작업을 하고 Github에 올리는 식으로 작업을 했다. 그런데 Github에 push하고 업데이트 된 페이지를 보기까지 시간이 좀 걸렸다. 크롬의 시크릿 모드로 접속하면 업데이트가 좀 더 빨리 되는 듯 했지만, 수정한 결과물을 바로바로 확인하고 싶어서 방법을 찾아보았다. 내 컴퓨터에 Ruby와 Jekyll을 설치하면 Github에 올리지 않고도 변경된 페이지를 바..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/8","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (8) - 카테고리와 태그 모아보기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"글을 여러 개 작성하다 보니 원하는 글을 찾아가기가 힘들게 되었다. 글 목록을 보려면 Home 화면의 최근 포스트로 봐야 한다. 그러나 글이 많아지면 한 페이지에 5개 밖에 안나오므로 원하는 글을 찾기도 힘들어지고, 카테고리별로 분류가 안되어있어 복잡해진다. 그래서 카테고리별로 글을 모아 보는 페이지를 만들었다. 기준이 되는 카테고리는 Front Matter에 작성한 categories 항목이..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/Github pages/9","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"Github Pages로 블로그 만들기 (9) - 카테고리 메뉴 만들기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"카테고리와 태그 페이지를 만들었는데, 주소창에 입력을 통해서만 들어갈 수 있어서 불편하다. 상단 메뉴를 수정하고 카테고리 페이지를 추가해 볼 것이다. 상단 메뉴 Quick-Start Guide가 있는 곳이다.\n메뉴에 관한 설정은 /_data/navigation.yml 파일에 들어있다.\n# main links\r\nmain:\r\n  - title: 'Quick-Start Guide'\r\n    url:..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-11-000-project","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (0) - 프로젝트 기획"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"프로젝트를 시작하게 된 동기\n웹 사이트를 개발하려고 마음을 먹었다.\r\n고등학교 커뮤니티 사이트인데, 내가 졸업한 고등학교 학생들을 위한 서비스를 만들고 싶어졌다.\n기획\n어떤 기능을 넣을 것인가\r\n페이지 이동 등 추가\n기술 스택 선택하기\n웹 개발에 대해 아무것도 모르는 상태로 개발에 뛰어들었다.\r\n프론트엔드는 HTML, CSS, JavaScript의 기본적인 문법만 알고, 백엔드에 대해서는 전혀..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-11-001-install-react-express","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (1) - React와 Express 설치"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"1. Node.js 설치\nReact와 Express를 사용하기 위해서는 Node.js가 설치되어 있어야 한다.\r\nNode.js란 JavaScript runtime이다.\r\n원래 JavaScript는 웹 브라우저에서 작동하는 언어이지만, Node.js는 브라우저 밖에서도 JavaScript 코드를 실행할 수 있게 한다.\nNode.js 다운로드\n> node -v\n\n> npm -v\r\nv.14.17.3..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-12-002-react-basic","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (2) - React 기본"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-12-003-express-basic","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (3) - Express 기본"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":".\n\n\nexpress-generator없이 서버 시작하기\n\n\ngenerator로 시작하기\n\n\nhelmet 추가\n\n\nnodemon 사용법\n\n\nES6 문법 사용법\n\n\ndevelopment.js 파일을 통한 npm start\n\n\n벨라퍼트 블로그 참고"}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-12-004-link-react-express","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (4) - React와 Express 연동"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"연동하는 두 가지 방법을 찾았다.\n\nExpress의 view 부분을 React로 만든 HTML로 대체\nReact 서버와 Express 서버를 연동\n\n1. Express의 view를 React로\n내가 처음 생각했던 방법은 이 방법이었다.\r\nExpress 만으로도 충분히 웹을 만들 수 있었기 때문이다.\r\nExpress를 배울 때, HTML 파일을 통해 페이지를 render 하는 것을 보고 이 부분..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-12-005-react-router-navigation","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (5) - React Router & Navigation"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"이제 네비게이션을 만들고 각 메뉴를 눌렀을 때 해당 페이지로 이동하는 기능을 구현하려고 한다.\r\n고등학교를 대상으로 하기 때문에 학교의 학사일정, 시간표, 식단표 등을 나이스 API에서 불러와 페이지에 띄울 것이다.\r\n그러기 위해서 React의 router를 사용한다.\r\n원래 구현하고 싶은 방법은 사용자가 백엔드로 요청을 보내면 백엔드에서 처리하여 React를 통해 돌려주는 것이지만 React..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-13-006-express-api","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (6) - Express로 외부 API 받아오기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":"1. 나이스 API\n서비스에 여러 기능을 넣을거지만 먼저 나이스 API를 통해 학교에 관한 정보를 받아올 것이다.\r\n나이스 교육정보 개방 포털에 가면 교육과 관련된 12가지 정보를 받아올 수 있다.\r\n내가 원하는 정보는 학사일정, 시간표, 식단표이다.\r\n포털을 찾아보니 학사일정, 고등학교시간표, 급식식단정보라는 데이터를 제공하고 있다.\r\n내 모교의 정보를 가져오려고 한다.\nAPI를 이용하기 위..."}]]}],["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"mb-1 text-2xl font-bold","children":["$","$L5",null,{"href":"/blog/PC Community/2021-08-16-007-calendar","className":"transition-all duration-200 hover:text-red-700/50 text-emerald-700/80 dark:text-emerald-400 dark:hover:text-red-300","children":"학생 커뮤니티 사이트 제작 (7) - React로 달력 만들기"}]}],["$","time",null,{"dateTime":"2021-08-11T00:00:00.000Z","className":"mb-2 block text-xs text-gray-600","children":"2021. 08. 11."}],["$","div",null,{"className":"text-sm leading-loose","children":""}]]}]]]}],null],"segment":"__PAGE__"},"styles":null}]}]]}]}],null],"segment":"blog"},"styles":null}]}]]}]}]}],null]
3:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"개발 일지"}]]
9:null
